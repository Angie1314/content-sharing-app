version: 2
jobs:
    build:
        working_directory: ~/content-sharing-app
        docker:
            - image: circleci/node:8.9.3-browsers
        steps:
            - checkout
            - run:
                name: Show current branch
                command: echo ${CIRCLE_BRANCH}
            - run:
                name: Show current directory
                command: pwd
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "package.json" }}
            - run:
                name: Install dependencies
                command: npm install
            - save_cache:
                key: v1-dependencies-{{ checksum "package.json" }}
                paths:
                    - node_modules
            - run:
                name: Linting
                command: npm run lint
    prod-build: 
        working_directory: ~/content-sharing-app
        docker:
            - image: circleci/node:8.9.3-browsers
        steps:
            - checkout
            - restore_cache:
                key: v1-dependencies-{{ checksum "package.json" }}
            - run:
                name: Install dependencies
                command: npm install
            - run:
                name: Building
                command: npm run build-prod
            - save_cache:
                key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
                paths:
                    - dist
                    - package.json
                    - firebase.json
                    - .firebaserc
    deploy:
        docker:
            - image: circleci/node:chakracore-8.11-browsers-legacy
        working_directory: ~/content-sharing-app
        steps:
            - run:
                name: Show current branch
                command: echo ${CIRCLE_BRANCH}
            - restore_cache:
                key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - run:
                name: Install Firebase
                command: npm install --save-dev firebase-tools   
            - run:
                name: Deploy Master to Firebase
                command: ./node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN --non-interactive

workflows:
    version: 2
    -deploy:
        jobs:
        - build
        - prod-build:
            requires:
                - build
            filters:
                branches:
                    only: 
                      - develop
                      - master
        - deploy:
            requires:
                - prod-build
            filters:
                branches:
                    only: master